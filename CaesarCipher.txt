# Custom Caesar Cipher
# Allow the shifted value to come from the range 1 to 25 inclusive. 
# Moreover, let the code preserve the letters' case (lower-case letters will remain lower-case) and all non-alphabetical characters should remain untouched.

# Your task is to write a program which:

# 1. asks the user for one line of text to encrypt;
# 2 .asks the user for a shift value (an integer number from the range 1..25 - note: you should force the user to enter a valid shift value (don't give up and don't let bad data fool you!)
# 3 .prints out the encoded text.


text = input("Enter your message: ")
cipher = ''

# Get input from user till it is valid
while(True):
    shift = int(input("Enter a valid shift number"))
    if shift in range(1,26):
        break

for char in text:
    if not char.isalpha():                #other than alphabets
        cipher += char                    #just add
    if char.isalpha():
        code = ord(char) + shift          #shift by said value
        if((65 <= ord(char) <= 90) and code > ord('Z')) or \
        ((97 <= ord(char) <= 122) and code > ord('z')):
           code = ord(char) + shift - 26

        cipher += chr(code)               #add to cipher

print("Cipher is: ", cipher)


# output

Enter your message: abcxyzABCxyz 123
Enter a valid shift number45
Enter a valid shift number26
Enter a valid shift number2
Cipher is:  cdezabCDEzab 123